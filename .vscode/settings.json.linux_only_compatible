// TODO generate from CMake
{
    "editor.renderWhitespace": "all",

    "files.associations": {
        "CMakeLists.txt": "cmake"
    },
    
    // Disable CMake in VSCode: using CMake via external terminal instead
    "cmake.configureOnOpen": false,
    "cmake.configureOnEdit": false,
    "cmake.automaticReconfigure": false,

    "C_Cpp.autoAddFileAssociations": false, // Win11 only: prevent updating "files.associations", as the entries might not be compatible with other platforms

    // TODO abstract platform-specific duplicate code for "C_Cpp.intelliSenseEngine"
    // Only generate on Linux & macOS: Disable for Linux & macOS: Disable IntelliSense from Microsoft C/C++ extension in favor of clangd, but only on non-Windows systems
    "C_Cpp.intelliSenseEngine": "disabled",

    // Only generate on Win11: Enable for Win11
    //"C_Cpp.intelliSenseEngine": "default", // Win11 only: using "Tag Parser" instead of "default" as the "default" (the newer) parser reports this line 'std::println("{:%Y/%m/%d}", std::chrono::system_clock::now());' as ill-formed (the formatter argument), but it's a falsely reported error - CMake generates and compiles the code correctly
    //"C_Cpp.intelliSenseEngine": "Tag Parser", // Win11 only: using "Tag Parser" instead of "default" as the "default" (the newer) parser reports this line 'std::println("{:%Y/%m/%d}", std::chrono::system_clock::now());' as ill-formed (the formatter argument), but it's a falsely reported error - CMake generates and compiles the code correctly
    "C_Cpp.default.cppStandard": "c++23", // Win11 only: pass from CMakeLists.txt

    // Only generate on Linux & macOS - pass CMake build dir via CMakeLists.txt
    "clangd.arguments": [
        "--compile-commands-dir=build-Debug" // Tell clangd to use compile_commands.json from build directory
    ]
}
